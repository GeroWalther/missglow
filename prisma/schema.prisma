
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_DB")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  address String?
  isAdmin Boolean  @default(false)
  // orders  Order[]
}

// type Address {
//   street  String
//   city    String
//   state   String
//   zip     String
//   country String
// }

// model Order {
//   id               String           @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt        DateTime         @default(now())
//   updatedAt        DateTime         @updatedAt

//   //need to be updated
//   hasBeenShipped   Boolean          @default(false)
//   isPaid Boolean @default(false)

//   // needed to create an order
//   pricePaidInCents Float
//   shippingCost     Float
//   orderedProducts  OrderedProduct[]
//   address          String
//   email String @unique
// }

// model Product {
//   id                     String           @id @default(auto()) @map("_id") @db.ObjectId
//   name                   String
//   priceInCents           Float
//   imageUrl               String[]
//   description            String
//   isAvailableForPurchase Boolean          @default(true)
//   createdAt              DateTime         @default(now())
//   updatedAt              DateTime         @updatedAt
//   orderedProducts        OrderedProduct[]
// }

// model OrderedProduct {
//   id        String  @id @default(auto()) @map("_id") @db.ObjectId
//   orderId   String  @db.ObjectId
//   order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
//   product   String
//   quantity  Int
// }
model OrderedProduct {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   String
  quantity  Int
}

model Order {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  hasBeenShipped   Boolean          @default(false)
  pricePaidInCents Float
  shippingCost     Float
  orderedProducts  OrderedProduct[]
  address          String
  email            String?
  stripePaymentIntentId  String
}
